<style>
  #visiting-card-container {
    max-width: 580px;
    margin: 0 auto;
  }
  .card-container {
    padding: 1rem;
    width: 100%;
    margin: auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: 100%;
    z-index: 1000;
    position: relative;
  }
  .background-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1;
  }

  .card-header {
    display: flex;
    align-items: center;
    height: 520px;
  }
  .card-header h2 {
    text-align: center;
    color: #333;
    width: 40%;
  }
  .card-details {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    justify-content: center;
    padding-left: 2rem;
    gap: 10px;
    width: 100%;
    border-bottom: 4px solid white;
    padding-bottom: 2rem;
  }

  .card-details-with-link {
    bottom: 3% !important;
    position: absolute;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
  }
  .card-details span,
  .card-details p {
    color: white;
    margin: 0;
  }

  .card-links {
    display: flex;
    gap: 5px;
    align-items: stretch;
    margin: 0 auto;
    flex-wrap: wrap;
    padding-left: 1rem;
    padding-right: 1rem;
    align-items: center;
    justify-content: center;
  }

  .card-links a {
    font-size: 20px;
    height: 40px;
    width: 40px;
    display: flex;
    align-items: center;
  }
  .card-links > a {
    text-align: center;
  }
  .contact-info {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .contact-info a {
    color: black;
    text-decoration: none;
  }

  .skeleton {
    background-color: #e0e0e0;
    border-radius: 4px;
    animation: shimmer 1.5s infinite linear;
  }
  .skeleton-text {
    height: 16px;
    width: 100%;
    margin-bottom: 10px;
  }
  .skeleton-circle {
    height: 40px;
    width: 40px;
    border-radius: 50%;
    display: flex !important;
    background-color: #e0e0e0;
  }
  .skeleton-card {
    display: flex;
    flex-direction: column;
    padding: 20px;
    width: 100%;
    margin: auto;
    background-color: #f9f9f9;
    gap: 1rem;
    height: 100vh;
  }
  .skeleton-header {
    display: flex;
    gap: 20px;
    align-items: center;
  }
  .skeleton-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .skeleton-links {
    display: flex;
    gap: 10px;
    justify-content: space-between;
  }
  .skeleton-links .skeleton-circle {
    background-color: #e0e0e0;
  }

  @keyframes shimmer {
    0% {
      background-position: -200px 0;
    }
    100% {
      background-position: calc(200px + 100%) 0;
    }
  }
  .skeleton.skeleton-text {
    display: block !important;
  }

  .error-container {
    text-align: center;
    color: #f44336;
    font-size: 16px;
    padding: 20px;

    background-color: #ffeaea;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    height: 250px;
    justify-content: center;
  }
  .error-container img {
    height: 40px;
    width: 40px;
  }
  .error-container p {
    margin: 0;
    font-size: 18px;
  }
  .card-derails-name {
    font-size: 44px;
    line-height: 1;
  }
  .card-derails-comapny,
  .card-derails-job {
    color: white !important;
    line-height: 1.2 !important;
  }
  .card-derails-job {
    font-size: 24px;
  }
  .card-derails-comapny {
    font-size: 16px;
  }

  .card-inforamtions-button {
    position: sticky;
    bottom: 0;
    display: flex;
    align-items: center;
    padding: 1rem 0;
    z-index: 1000; /* Ensure it stays on top */
    align-items: center;
    justify-content: center;
  }

  .card-inforamtions-button button {
    background-color: #ffffff;
    color: #000000;
    border: none;
    border-radius: 5rem;
    font-size: 20px;
    cursor: pointer;

    font-size: 20px;
    display: flex;
    gap: 1rem;
    align-items: center;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-right: 2rem;
    width: 275px;
    padding-left: 5px;
  }

  .card-container-top {
    display: flex;
    flex-direction: column;
    text-align: center;
    align-items: center;
    height: 520px;
    position: relative;
    border-radius: 2rem;
    border: 1px solid white;
  }
  .card-container-top img {
    height: 100%;
    width: 100%;
    border-radius: 2rem;
    object-fit: cover;
  }
  .card-header-logo {
    color: #efeded;
    cursor: pointer;
    text-align: center;
    font-size: 16px;
  }
  .card-image-opacity {
    position: absolute;
    background: linear-gradient(
      to top,
      rgba(0, 0, 0, 1) 0%,
      rgba(0, 0, 0, 0.4) 30%,
      rgba(0, 0, 0, 0.1) 70%,
      rgba(0, 0, 0, 0.05) 100%
    );
    width: 100%;
    height: 100%;
    display: block !important;
    bottom: 0;
    border-radius: 2rem;
  }
  .card-derails-name,
  .card-derails-job,
  .card-derails-comapny {
    font-family: cinzel;
    text-transform: uppercase;
  }

  .card-inforamtions-bio {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    text-align: center;
    background-color: rgba(0, 0, 0, 0.75);
    color: white;
    border-radius: 1rem;
    padding: 1.5rem;
    font-size: 18px;
    gap: 10px;
    align-items: center;
    border: 1px solid white;
  }

  .card-derails-comapny-bio {
    font-size: 18px;
    line-height: 1.3;
    font-family: ovo;
  }

  .contact-info-phone,
  .contact-info-email,
  .website-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1.5rem 5rem;
    background-color: rgba(0, 0, 0, 0.75);
    color: white;
    border-radius: 1rem;
    border: 1px solid white;
    font-size: 18px;
  }

  .contact-info-phone-details {
    display: flex;
    color: white;
    font-family: dream-avenue;
    font-size: 24px;
    align-items: center;
  }
  .contact-info-email-details,
  .website-info-details {
    color: white;
    font-family: dream-avenue;
    font-size: 24px;
    line-break: anywhere;
    text-align: center;
    width: 100%;
  }

  .contact-info-line {
    color: #999;
    font-size: 18px;
    font-weight: bold;
    display: flex;
  }

  .save-contact-button-icon {
    background-color: black;
    padding: 1rem;
    border-radius: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 50px;
    width: 50px;
  }

  .contact-info-divider {
    border-bottom: 2px solid #ccc;
    width: 100%;
    display: block !important;
  }

  #typing-job-title {
    display: inline-block;
    font-size: inherit;
    font-family: inherit;
    color: inherit;
    /* white-space: nowrap; */
  }

  @keyframes blink {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

  @media screen and (max-width: 650px) {
    .card-derails-job {
      font-size: 20px !important;
    }
    .card-derails-comapny {
      font-size: 16px !important;
    }
  }
  @media screen and (max-width: 467px) {
    .card-derails-name {
      font-size: 36px !important;
    }
    .card-header img {
      height: 100%;
      width: 150px !important;
    }
    .contact-info-email-details,
    .website-info-details,
    .contact-info-phone-details {
      font-size: 18px;
    }
  }

  @media screen and (max-width: 320px) {
    .contact-info-phone-details {
      flex-direction: column;
    }
    .contact-info-line {
      display: none;
    }
  }
</style>

<div id="visiting-card-container">
  <div class="skeleton-card">
    <div class="skeleton-header">
      <div class="skeleton-circle"></div>
      <div class="skeleton-details">
        <div class="skeleton skeleton-text" style="width: 70%; height: 24px;"></div>
        <div class="skeleton skeleton-text" style="width: 50%; height: 20px;"></div>
        <div class="skeleton skeleton-text" style="width: 50%; height: 20px;"></div>
      </div>
    </div>
    <div class="skeleton-links">
      <div class="skeleton-circle"></div>
      <div class="skeleton-circle"></div>
      <div class="skeleton-circle"></div>
      <div class="skeleton-circle"></div>
    </div>
    <div class="skeleton-details">
      <div class="skeleton skeleton-text" style="width: 90%;"></div>
      <div class="skeleton skeleton-text" style="width: 90%;"></div>
      <div class="skeleton skeleton-text" style="width: 90%;"></div>
      <div class="skeleton skeleton-text" style="width: 90%;"></div>
    </div>
  </div>
</div>
<script>
  function generateVCard(data) {
    const {
      name,
      bio,
      jobTitle,
      company,
      email,
      secondaryEmail,
      phoneNumber,
      secondaryPhoneNumber,
      website,
      secondaryWebsite,
      linkedin,
      facebook,
      instagram,
      twitter,
      snapchat,
      whatsapp,
      tiktok,
      base64Image,
      fieldIsVisible,
    } = data;

    // Extract first and last name
    const firstName = name.split(' ').slice(0, -1).join(' ');
    const lastName = name.split(' ').slice(-1).join(' ');

    // Build vCard content
    const vCardContent = `
BEGIN:VCARD
VERSION:3.0
${fieldIsVisible.isName ? `N:${lastName};${firstName};;` : ''}
${fieldIsVisible.isName && name ? `FN:${name}` : ''}
${fieldIsVisible.isBio && bio ? `NOTE:${bio}` : ''}
${fieldIsVisible.isJobTitle && jobTitle ? `TITLE:${jobTitle}` : ''}
${fieldIsVisible.isCompany && company ? `ORG:${company}` : ''}
${fieldIsVisible.isEmail && email ? `EMAIL;TYPE=INTERNET:${email}` : ''}
${fieldIsVisible.isEmail && secondaryEmail ? `EMAIL;TYPE=INTERNET:${secondaryEmail}` : ''}
${fieldIsVisible.isPhoneNumber && phoneNumber ? `TEL;TYPE=CELL:${phoneNumber}` : ''}
${fieldIsVisible.isSecondaryPhoneNumber && secondaryPhoneNumber ? `TEL;TYPE=CELL:${secondaryPhoneNumber}` : ''}
${fieldIsVisible.isWebsite && website ? `URL;TYPE=Website:${website}` : ''}
${fieldIsVisible.isSecondaryWebsite && secondaryWebsite ? `URL;TYPE=Website:${secondaryWebsite}` : ''}
${fieldIsVisible.isLinkedin && linkedin ? `URL;TYPE=LinkedIn:${linkedin}` : ''}
${fieldIsVisible.isFacebook && facebook ? `URL;TYPE=Facebook:${facebook}` : ''}
${fieldIsVisible.isInstagram && instagram ? `URL;TYPE=Instagram:${instagram}` : ''}
${fieldIsVisible.isTwitter && twitter ? `URL;TYPE=Twitter:${twitter}` : ''}
${fieldIsVisible.isTiktok && tiktok ? `URL;TYPE=Tiktok:${tiktok}` : ''}
${fieldIsVisible.isSnapchat && snapchat ? `URL;TYPE=Snapchat:${snapchat}` : ''}
${fieldIsVisible.isWhatsapp && whatsapp ? `URL;TYPE=Whatsapp:${whatsapp}` : ''}
${
  fieldIsVisible.isProfileImage && base64Image
    ? `PHOTO;ENCODING=b;TYPE=${base64Image.match(/^data:(.*?);base64,/)?.[1] || 'image/png'}:${
        base64Image.split(',')[1]
      }`
    : ''
}
END:VCARD
`.trim();

    const blob = new Blob([vCardContent], { type: 'text/x-vcard' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = `${firstName || 'contact'}.vcf`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }

  function getQueryParam() {
    const path = window.location.pathname;
    const lastSegment = path.substring(path.lastIndexOf('/') + 1);
    return lastSegment;
  }

  const token = getQueryParam();
  console.log('token', token);
  const container = document.getElementById('visiting-card-container');

  function renderContent(html) {
    container.innerHTML = html;
  }

  function createErrorHTML(message, iconUrl) {
    return `
      <div class="card-container">
          <video autoplay loop  muted playsinline class="background-video" >
            <source src="https://ventro-box-tap.s3.ap-south-1.amazonaws.com/uploads/ventro+background+video.mp4" type="video/mp4" />
          </video>
        <div class="error-container">
          <span>{{- "icon-error-2.svg" | inline_asset_content -}}</span>
          <p>${message}</p>
        </div>
      </div>
    `;
  }

  function createVisitingCardHTML(data) {
    console.log('data', data);
    const {
      name,
      bio,
      jobTitle,
      profileImage,
      company,
      email,
      secondaryEmail,
      phoneNumber,
      secondaryPhoneNumber,
      website,
      secondaryWebsite,
      linkedin,
      facebook,
      instagram,
      tiktok,
      twitter,
      snapchat,
      whatsapp,
      fieldIsVisible,
      isActive,
    } = data;

    if (!isActive) {
      return `
      <div class="card-container">
        <video autoplay loop muted playsinline class="background-video" >
            <source src="https://ventro-box-tap.s3.ap-south-1.amazonaws.com/uploads/ventro+background+video.mp4" type="video/mp4" />
        </video>
        <div class="error-container">
          <p>This visiting card is not active.</p>
        </div>
      </div>
    `;
    }

    const fieldTemplate = (isVisible, value, type) => {
      if (!isVisible || !value) return '';
      const href = type === 'email' ? `mailto:${value}` : `tel:${value}`;
      return `
        <div>
          <a href="${href}" style="color: white; text-decoration:none; line-height:1.2;">${value}</a>
        </div>
      `;
    };
    const websiteTemplate = (isVisible, value) => {
      if (!isVisible || !value) return '';
      return `
        <div>
          <a href="${value}" style="color: white; text-decoration:none; line-height:1.2;">${value}</a>
        </div>
      `;
    };

    const socialLinkTemplate = (isVisible, url, icon) => {
      if (!isVisible || !url) return '';
      return `<a href="${url}" target="_blank">${icon}</a>`;
    };
    const jobTitleContainer = `
      <div class="card-derails-job">
        <span id="typing-job-title"></span>
      </div>
    `;
    const fields = [
      fieldIsVisible.isWebsite && website,
      fieldIsVisible.isSecondaryWebsite && secondaryWebsite,
      fieldIsVisible.isLinkedin && linkedin,
      fieldIsVisible.isFacebook && facebook,
      fieldIsVisible.isInstagram && instagram,
      fieldIsVisible.isTiktok && tiktok,
      fieldIsVisible.isTwitter && twitter,
      fieldIsVisible.isSnapchat && snapchat,
      fieldIsVisible.isWhatsapp && whatsapp,
    ];

    // Count the number of fields that are visible and have values
    const fieldCount = fields.filter((field) => field).length;
    console.log('fieldCount', fieldCount);
    const fieldCountClass = fieldCount <= 4 ? 'field-count-min' : 'field-count-max';

    return `
      <div class="card-container">
      <video autoplay loop  muted playsinline  class="background-video">
        <source src="https://ventro-box-tap.s3.ap-south-1.amazonaws.com/uploads/ventro+background+video.mp4" type="video/mp4" />
      </video>
        <div class='card-container-top'>
          ${
            fieldIsVisible.isProfileImage && profileImage
              ? `<img src="${profileImage}" alt="Profile Image" >`
              : `<span>'{{- "icon-user.svg" | inline_asset_content -}}'</span>`
          }
        <div class='card-image-opacity' style=''></div>
      <div class='card-details-with-link'>
        <div class="card-details">
              ${fieldIsVisible.isName ? `<span class='card-derails-name'>${name}</span>` : ''}
              <div class='card-derails-job'>
               ${fieldIsVisible.isJobTitle ? jobTitleContainer : ''}
              </div>
              ${fieldIsVisible.isCompany ? `<p  class='card-derails-comapny' >${company}</p>` : ''}
        </div>
        <div class="card-links ">
          ${socialLinkTemplate(fieldIsVisible.isWebsite, website, '{{- "icon-website.svg" | inline_asset_content -}}')}
          ${socialLinkTemplate(
            fieldIsVisible.isSecondaryWebsite,
            secondaryWebsite,
            '{{- "icon-website.svg" | inline_asset_content -}}'
          )}
          ${socialLinkTemplate(
            fieldIsVisible.isLinkedin,
            linkedin,
            '{{- "icon-linkedin.svg" | inline_asset_content -}}'
          )}
          ${socialLinkTemplate(
            fieldIsVisible.isFacebook,
            facebook,
            '{{- "icon-facebook-2.svg" | inline_asset_content -}}'
          )}
          ${socialLinkTemplate(
            fieldIsVisible.isInstagram,
            instagram,
            '{{- "icon-instagram-2.svg" | inline_asset_content -}}'
          )}
          ${socialLinkTemplate(fieldIsVisible.isTiktok, tiktok, '{{- "icon-ticktok.svg" | inline_asset_content -}}')}
          ${socialLinkTemplate(
            fieldIsVisible.isTwitter,
            twitter,
            '{{- "icon-twitter-2.svg" | inline_asset_content -}}'
          )}
          ${socialLinkTemplate(
            fieldIsVisible.isSnapchat,
            snapchat,
            '{{- "icon-snapchat-2.svg" | inline_asset_content -}}'
          )}

           ${socialLinkTemplate(
             fieldIsVisible.isWhatsapp,
             whatsapp,
             '{{- "icon-whatsapp.svg" | inline_asset_content -}}'
           )}
        </div></div>
        
      </div>
       
      
        ${
          fieldIsVisible.isBio && bio
            ? `
            <div class="card-inforamtions-bio">
               {{- "icon-user-2.svg" | inline_asset_content -}}
              <span class="card-derails-comapny-bio">${bio}</span>
            </div>
          `
            : ''
        }


     
     ${
       (fieldIsVisible.isPhoneNumber && phoneNumber) || (fieldIsVisible.isSecondaryPhoneNumber && secondaryPhoneNumber)
         ? `
      <div class="contact-info-phone">
        <div class="contact-info-phone-icon">
          {{- "icon-phone.svg" | inline_asset_content -}}
        </div>
        <div class="contact-info-phone-details">
          ${fieldTemplate(fieldIsVisible.isPhoneNumber, phoneNumber, 'phone')}
          ${
            fieldIsVisible.isSecondaryPhoneNumber && secondaryPhoneNumber && fieldIsVisible.isPhoneNumber
              ? `<span class='contact-info-line'>{{- "icon-line.svg" | inline_asset_content -}}</span>`
              : ''
          }
          ${fieldTemplate(fieldIsVisible.isSecondaryPhoneNumber, secondaryPhoneNumber, 'phone')}
        </div>
      </div>`
         : ''
     }


        ${
          (fieldIsVisible.isEmail && email) || (fieldIsVisible.isSecondaryEmail && secondaryEmail)
            ? `
          <div class="contact-info-email">
            <div class='contact-info-email-icon'>
                {{- "icon-mailbox.svg" | inline_asset_content -}}
            </div>
            <div class='contact-info-email-details'>
              ${fieldTemplate(fieldIsVisible.isEmail, email, 'email')}
               ${
                 fieldIsVisible.isSecondaryEmail && secondaryEmail && fieldIsVisible.isEmail
                   ? `<div class='contact-info-divider'></div>`
                   : ''
               }
              ${fieldTemplate(fieldIsVisible.isSecondaryEmail, secondaryEmail, 'email')}
            </div>
          
          </div>`
            : ''
        }
      ${
        (fieldIsVisible.isWebsite && website) || (fieldIsVisible.isSecondaryWebsite && secondaryWebsite)
          ? `
            <div class="website-info">
              <div class='website-info-icon'>
                  {{- "icon-website.svg" | inline_asset_content -}}
              </div>
              <div class='website-info-details'>
                ${websiteTemplate(fieldIsVisible.isWebsite, website)}

                ${
                  fieldIsVisible.isWebsite && website && fieldIsVisible.isSecondaryWebsite && secondaryWebsite
                    ? `<div class='contact-info-divider'></div>`
                    : ''
                }
                ${websiteTemplate(fieldIsVisible.isSecondaryWebsite, secondaryWebsite)}
              </div>
            </div>`
          : ''
      }

        <div class='card-inforamtions-button'>
            <button id="save-contact-button">
                <span class='save-contact-button-icon'>{{- "icon-add-user.svg" | inline_asset_content -}}</span> ADD TO CONTACTS
            </button>
         </div>


          <a href="{{ routes.root_url }}" style="text-decoration: none; height: 40px;">
          <div class="card-header-logo">
            <p>© {{ 'now' | date: '%Y' }}, Ventro</p>
          </div>
        </a>
      </div>
    `;
  }
  function typeEffect(elementId, text, speed) {
    const element = document.getElementById(elementId);
    let i = 0;

    function type() {
      if (i < text.length) {
        element.innerHTML += text.charAt(i);
        i++;
        setTimeout(type, speed);
      }
    }

    type();
  }
  if (token) {
    fetch(`https://nfctap.ventro.shop/api/customer/getCustomer/${token}`)
      .then((response) => {
        if (!response.ok) {
          throw new Error('Failed to fetch data.');
        }
        return response.json();
      })
      .then((data) => {
        if (data) {
          console.log('data for response', data);
          renderContent(createVisitingCardHTML(data));
          const saveContactButton = document.getElementById('save-contact-button');
          if (saveContactButton) {
            saveContactButton.addEventListener('click', () => {
              generateVCard(data);
            });
          }
          if (data?.fieldIsVisible.isJobTitle && data?.jobTitle) {
            setTimeout(() => {
              typeEffect('typing-job-title', data?.jobTitle, 100);
            }, 500);
          }
        } else {
          renderContent(createErrorHTML('Sorry, the visiting card could not be found.'));
        }
      })
      .catch((error) => {
        renderContent(createErrorHTML('Error fetching data. Please try again later.'));
      });
  } else {
    renderContent(createErrorHTML('No token provided in the URL.'));
  }
</script>

{% schema %}
{
  "name": "Ventro tap",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Add a title",
      "default": "Ventro tap"
    }
  ],
  "presets": [
    {
      "name": "Ventro tap"
    }
  ]
}
{% endschema %}
